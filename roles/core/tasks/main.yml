- name: Install System Packages 1 (build-essential, cmake, pkg-config, pthread)
  become: true
  apt:
    name: ["build-essential", "cmake", "pkg-config", "libpthread-stubs0-dev"]
  tags:
    - install
    - neovim
    - core

- name: Install System Packages 2 (lua, libtool, libtool-bin, gettext,unzip)
  become: true
  apt:
    name: ["lua5.1", "libtool", "libtool-bin", "gettext","unzip","curl"]
  tags:
    - install
    - neovim
    - core

- name: Install System Packages 3 (htop lsof ccache ninja-build python3-pip moreutils ripgrep)
  become: true
  apt:
    name: ["htop", "lsof", "ccache", "ninja-build", "python3-pip", "moreutils","ripgrep","fzf","cargo","fd-find"]
  tags:
    - install
    - core
    - neovim

- name: Get system architecture
  shell: "dpkg --print-architecture"
  register: system_architecture
  changed_when: false
  tags:
    - install
    - core

- name: Set architecture fact
  set_fact:
    is_arm: "{{ system_architecture.stdout in ['arm64', 'armhf', 'arm'] }}"
  tags:
    - install
    - core

- name: Install Node.js and npm
  become: true
  block:
    - name: Add NodeSource distributions for Node.js 16
      shell: "curl -sL https://deb.nodesource.com/setup_16.x | sudo -E bash -"
    - name: Install Node.js and npm
      apt:
        name: ["nodejs"]
        state: present
  tags:
    - install
    - core

- name: Install Python3 and venv for virtual environment creation
  become: true
  apt:
    name: ["python3", "python3-venv"]
    state: present
  tags:
    - install
    - core

- name: Install kubectl
  become: true
  shell: >
    curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/{{ 'arm64' if is_arm else 'amd64' }}/kubectl" &&
    chmod +x kubectl &&
    mv kubectl /usr/local/bin/
  tags:
    - install
    - core

- name: Install helm
  become: true
  shell: "curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash"
  tags:
    - install
    - core

- name: Install k9s
  become: true
  shell: "curl -sS https://webinstall.dev/k9s | bash"
  when: not is_arm
  tags:
    - install
    - core

- name: Install k9s (ARM)
  become: true
  shell: |
    VERSION=$(curl -s https://api.github.com/repos/derailed/k9s/releases/latest | grep tag_name | cut -d '"' -f 4)
    curl -LO "https://github.com/derailed/k9s/releases/download/${VERSION}/k9s_Linux_arm64.tar.gz"
    tar xzf k9s_Linux_arm64.tar.gz
    mv k9s /usr/local/bin/
  when: is_arm
  tags:
    - install
    - core

- name: Install MinIO client (mc)
  become: true
  shell: >
    curl -O "https://dl.min.io/client/mc/release/linux-{{ 'arm64' if is_arm else 'amd64' }}/mc" &&
    chmod +x mc &&
    mv mc /usr/local/bin/
  tags:
    - install
    - core

- name: Install AWS CLI version 2
  become: true
  shell: |
    curl "https://awscli.amazonaws.com/awscli-exe-linux-{{ 'aarch64' if is_arm else 'x86_64' }}.zip" -o "awscliv2.zip"
    unzip awscliv2.zip
    sudo ./aws/install
  tags:
    - install
    - core


